--altsyncram ADDRESS_ACLR_B="NONE" ADDRESS_REG_B="CLOCK1" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" CLOCK_ENABLE_INPUT_A="BYPASS" CLOCK_ENABLE_OUTPUT_A="BYPASS" CYCLONEII_M4K_COMPATIBILITY="ON" CYCLONEII_SAFE_WRITE="RESTRUCTURE" DEVICE_FAMILY="Cyclone II" ENABLE_RUNTIME_MOD="NO" INDATA_ACLR_B="NONE" INDATA_REG_B="CLOCK1" INIT_FILE="data_memory_gemaakt" LOW_POWER_MODE="AUTO" NUMWORDS_A=8192 NUMWORDS_B=8192 OPERATION_MODE="BIDIR_DUAL_PORT" OUTDATA_ACLR_A="NONE" OUTDATA_ACLR_B="NONE" OUTDATA_REG_A="UNREGISTERED" OUTDATA_REG_B="UNREGISTERED" RDCONTROL_REG_B="CLOCK1" read_during_write_mode_port_a="NEW_DATA_NO_NBE_READ" WIDTH_A=64 WIDTH_B=64 WIDTH_BYTEENA_A=1 WIDTHAD_A=13 WIDTHAD_B=13 WRCONTROL_ACLR_B="NONE" WRCONTROL_WRADDRESS_REG_B="CLOCK1" address_a address_b clock0 clock1 data_a data_b q_a q_b wren_a wren_b CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 8.1 cbx_altsyncram 2008:08:26:11:57:11:SJ cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:05:19:10:49:01:SJ cbx_lpm_compare 2008:09:01:07:44:05:SJ cbx_lpm_decode 2008:05:19:10:39:27:SJ cbx_lpm_mux 2008:05:19:10:30:36:SJ cbx_mgl 2008:08:08:15:16:18:SJ cbx_stratix 2008:08:05:17:10:23:SJ cbx_stratixii 2008:08:07:13:54:47:SJ cbx_stratixiii 2008:07:11:13:32:02:SJ cbx_util_mgl 2008:07:18:09:58:54:SJ  VERSION_END


-- Copyright (C) 1991-2008 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION altsyncram_r8a2 (address_a[13..0], address_b[13..0], clock0, clock1, data_a[63..0], data_b[63..0], wren_a, wren_b)
RETURNS ( q_a[63..0], q_b[63..0]);

--synthesis_resources = lut 272 M4K 256 reg 4 
OPTIONS ALTERA_INTERNAL_OPTION = "OPTIMIZE_POWER_DURING_SYNTHESIS=NORMAL_COMPILATION";

SUBDESIGN altsyncram_mue2
( 
	address_a[12..0]	:	input;
	address_b[12..0]	:	input;
	clock0	:	input;
	clock1	:	input;
	data_a[63..0]	:	input;
	data_b[63..0]	:	input;
	q_a[63..0]	:	output;
	q_b[63..0]	:	output;
	wren_a	:	input;
	wren_b	:	input;
) 
VARIABLE 
	altsyncram3 : altsyncram_r8a2;

BEGIN 
	altsyncram3.address_a[] = ( address_a[12..4], B"0", address_a[3..0]);
	altsyncram3.address_b[] = ( address_b[12..4], B"0", address_b[3..0]);
	altsyncram3.clock0 = clock0;
	altsyncram3.clock1 = clock1;
	altsyncram3.data_a[] = data_a[];
	altsyncram3.data_b[] = data_b[];
	altsyncram3.wren_a = wren_a;
	altsyncram3.wren_b = wren_b;
	q_a[] = altsyncram3.q_a[];
	q_b[] = altsyncram3.q_b[];
END;
--VALID FILE
